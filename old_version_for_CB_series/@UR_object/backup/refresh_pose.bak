function pose = refresh_pose(obj)
    %% 从30002端口读取UR机器人的各种信息
    %% 利用readasync命令读取原始的二进制状态信息
    
    if strcmp(obj.s2.status,'closed')  %如果没打开端口，则打开之
        fopen(obj.s2);
        pause(0.1);
    end
    readasync(obj.s2);
    msg = fread(obj.s2);
    if  size(msg,1)<4
        aa = msgbox('UR连接错误,将重新连接');
        uiwait(aa);
        fclose(obj.s2);
        obj.refresh_pose;
        return;
    end
    len = msg(3)*256+msg(4);
    if len ~= length(msg)
        aa = msgbox('UR读数错误，将重新读数');
        uiwait(aa); 
        obj.refresh_pose;
        return;
    end

    %% 从原始二进制状态信息中提取感兴趣的信息
    % 这里仅提取"joint data"(type1)和"Cartesion Info"(type4)
    ct = 5; %计数器初始化
    status.q_actual = zeros(6,1);
    status.q_target = zeros(6,1);
    status.pose_tcp = zeros(6,1);
    while(ct<len)
        pkg_len = msg(ct+3)*256+msg(ct+4); %数据包长度
        pkg_type = msg(ct+5);
        if (pkg_type == 1)
            for num = 1:1:6
                tmp1 = msg(ct+41*(num-1)+6 :ct+41*(num-1)+13);
                tmp2 = msg(ct+41*(num-1)+14:ct+41*(num-1)+21);
                tmp1 = dec2hex(tmp1)';
                tmp2 = dec2hex(tmp2)';
                tmp1 = strcat(tmp1(:)');
                tmp2 = strcat(tmp2(:)');
                status.q_actual(num) = hex2num(tmp1)*180/pi;
                status.q_target(num) = hex2num(tmp2)*180/pi;
            end  
        elseif (pkg_type == 4)
            for i=1:1:6
                tmp = msg(ct+6+(i-1)*8:ct+13+(i-1)*8);
                tmp = dec2hex(tmp)';
                tmp = strcat(tmp(:)');
                status.pose_tcp(i) = hex2num(tmp);
            end
        end
        ct = ct+pkg_len;          
    end
    pose = status.pose_tcp;
